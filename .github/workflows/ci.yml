on: [push]
name: build

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    container: node:10.18-jessie
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install SQLX
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: sqlx-cli
      - name: Setup database
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres/runs_ci
        run: sqlx database setup
      - name: Build
        uses: actions-rs/cargo@v1
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres/runs_ci
        with:
          command: build
          args: --release
      - name: Save build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.workflow }}-${{ github.sha }}
          path: ${{ github.workspace }}/target/release/runs-api
          retention-days: 1
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    needs: build
    if: startsWith(github.event.head_commit.message, 'deploy:')
    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build-${{ github.sha }}
          path: "~"
      - name: Run SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.MACHINE_SSH_KEY }}
      - name: Copy to server
        run: scp -P ${{ secrets.MACHINE_SSH_PORT }} ~/runs-api runs@${{ secrets.MACHINE_HOST }}:/opt/runs/api/bin
